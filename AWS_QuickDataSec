#Create IAM Policies and Roles
#Create an IAM Policy

aws iam create-policy --policy-name MyS3AccessPolicy --policy-document file://policy.json

 policy.json for S3 access:
 
 {
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": "s3:*",
            "Resource": "arn:aws:s3:::my-bucket/*"
        }
    ]
}


#Automate Compliance Checks with AWS Config
aws configservice put-config-rule --config-rule file://config-rule.json

{
    "ConfigRuleName": "s3-bucket-public-read-prohibited",
    "Description": "Checks that your S3 buckets do not allow public read access.",
    "Scope": {
        "ComplianceResourceTypes": [
            "AWS::S3::Bucket"
        ]
    },
    "Source": {
        "Owner": "AWS",
        "SourceIdentifier": "S3_BUCKET_PUBLIC_READ_PROHIBITED"
    },
    "InputParameters": "{}",
    "MaximumExecutionFrequency": "TwentyFour_Hours"
}

#Create a CloudWatch Log Group and Stream:


aws logs create-log-group --log-group-name MyLogGroup
aws logs create-log-stream --log-group-name MyLogGroup --log-stream-name MyLogStream

Create a Metric Filter for CloudWatch Logs:
aws logs put-metric-filter --log-group-name MyLogGroup --filter-name MyMetricFilter --filter-pattern "ERROR" --metric-transformations metricName=MyMetric,metricNamespace=MyNamespace,metricValue=1

Enable Automatic S3 Bucket Encryption:

aws s3api put-bucket-encryption --bucket my-bucket --server-side-encryption-configuration '{
    "Rules": [
        {
            "ApplyServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms",
                "KMSMasterKeyID": "arn:aws:kms:us-west-2:123456789012:key/<key-id>"
            }
        }
    ]
}'

Create a KMS Key:
aws kms create-key --description "My S3 Encryption Key"
Create an Alias for the KMS Key:
aws kms create-alias --alias-name alias/MyS3Key --target-key-id <key-id>
